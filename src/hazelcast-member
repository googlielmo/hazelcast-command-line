#!/usr/bin/env bash

# templates meant to be resolved at build or install time
HAZELCAST_VERSION=${hazelcast_version}

#
CMD=$(basename $0)
PRGDIR="$(dirname "$(realpath "$0" 2>/dev/null || readlink -f "$0")")"
export HAZELCAST_HOME=${HAZELCAST_HOME:-$(cd "$PRGDIR/.." >/dev/null; pwd -P)}

function is_EE() {
    [ -f "$HAZELCAST_HOME/lib/hazelcast-enterprise-all-${HAZELCAST_VERSION}.jar" ]
}

if [ is_EE ] ; then
    HAZELCAST_VERSION="Enterprise $HAZELCAST_VERSION"
fi

function banner () {
    echo "  _   _               _               _   "
    echo " | | | | __ _ _______| | ___ __ _ ___| |_ "
    echo " | |_| |/ _\` |_  / _ \ |/ __/ _\` / __| __|"
    echo " |  _  | (_| |/ /  __/ | (_| (_| \__ \ |_ "
    echo " |_| |_|\__,_/___\___|_|\___\__,_|___/\__|"
    echo
    echo " ${HAZELCAST_VERSION}"
    echo
}

function version() {
    echo "Hazelcast ${HAZELCAST_VERSION}"
}

function usage() {
    echo "$CMD controls Hazelcast member instance(s) on the local machine"
    echo
    echo "Usage:  $CMD COMMAND"
    echo
    echo "Basic Commands:"
    echo "  logs        display logs for a member"
    echo "  start       start a Hazelcast member"
    echo "  status      display process status for started members"
    echo "  stop        stop a member"
    echo
    echo "Other Commands:"
    echo "  list        print started members IDs"
    echo "  usage       display usage information"
    echo
    echo "Options:"
    echo "  -h or --help"
    echo "        display usage and options"
    echo
    echo "  -v or --version"
    echo "        print Hazelcast version"
    echo
    echo "Run '$CMD help COMMAND' for more information on a command."
}

if [[ $1 = '' ]]; then
    banner
    usage
    exit 0
fi

COMMAND=$1
shift
case "$COMMAND" in
    banner)
        banner
        ;;
    help | logs | list | start | status | stop | init)
        CMD="${CMD}" "${HAZELCAST_HOME}/bin/${COMMAND}.sh" "$@"
        ;;
    --help | -h)
        usage
        ;;
    --version | -v)
        version
        ;;
    --commandlist)
        echo help logs list start status stop
        ;;
    --optionlist)
        echo --help --version
        ;;
    *)
        usage
        echo
        echo "$CMD: '$COMMAND' is not a valid command."
esac
